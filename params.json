{"name":"Localcacheloader","tagline":"Adobe Air Local Cache Loader that will save on the file system and then retrive it from there ","body":"\r\n\r\nMain reason for forking is translated the code and docs to english \r\n\r\nLocalCacheLoader of fully compatible with Loader / URLLoader.\r\n\r\n\r\nBy using this class , the data of the image or text that is read\r\nSave once locally , if a file of the same already exists\r\nI will use that file .\r\n\r\nAs a result , you can eliminate unnecessary communication of the same file .\r\nThe usage is exactly the same as Loader / URLLoader normal .\r\n\r\nPoint of difference is that the initialization process requires some prior to use .\r\nIt is that it is necessary to use a Factory class dedicated to the generation of class .\r\n\r\nIt is also available on AIR for Android / AIR for iOS.\r\n\r\n# # How to use\r\n\r\nWhile it is easy to understand it 's get a look at the sample / main.as\r\nIt is used first initialize something like the following .\r\nFor us to save on local without permission is after .\r\n\r\nSo keep that uniquely file based on the URL, unless it is the same URL completely\r\nI may not file will be overwritten .\r\n    ,,,\r\n    // Setup cache Directory.\r\n    // Can be cached in the directory that you specify here .\r\n    LocalCacheSettings.WORKING_DIRECTORY = File.applicationDirectory;\r\n    \r\n    // Please set the following: If AIR for Android, the AIR for iOS.\r\n    // LocalCacheSettings.WORKING_DIRECTORY = File.applicationStorageDirectory;\r\n\r\n    // Init Factory Class.\r\n    // Loader like normal will be used if you do not initialize the factory class .\r\n    NetClassFactory.initialize (LocalCacheLoader, LocalCacheURLLoader, LocalCacheNetStream);\r\n    \r\n    // Create Class.\r\n    // If true the second argument here , regardless of there without a cache that is stored in the local\r\n    // I will take the file from the Web always on .\r\n    _loader = NetClassFactory.createLoader (null, false);\r\n    / / I use normally after .\r\n    _loader.contentLoaderInfo.addEventListener (Event.COMPLETE, _onComplete);\r\n    _loader.load (new URLRequest (\"https://www.google.co.jp/images/srpr/logo11w.png\"));\r\n\r\n\r\nFork from https://github.com/sgmnt/LocalCacheLoader","google":"UA-49309184-1","note":"Don't delete this file! It's used internally to help with page regeneration."}